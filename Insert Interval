class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        set<pair<int,int>>st;
        vector<vector<int>>v;
        for(int i=0;i<intervals.size();i++){
            st.insert({intervals[i][0],intervals[i][1]});
        }
    
        auto it=st.upper_bound({newInterval[0],newInterval[1]});
        auto pre=it;
        pre--;
        cout<<it->first<<" "<<it->second;
   
         int left=newInterval[0];
        int right=newInterval[1];
         if(pre->second>=left){
                 left=pre->first;
                 right=max(right,pre->second);
                 st.erase(pre);
        }
         
         
      while( it!=st.end() and right>=it->first){
                  auto t=it;
                 //cout<<t->first<<" "<<t->second;
               // left=temp->first;
                 right=max(right,t->second);
                  it++;
                 st.erase(t);
                 
        
        }
        st.insert({left,right});
        for(auto itr:st){
           
            vector<int>temp;
             temp.push_back(itr.first);
             temp.push_back(itr.second);
            v.push_back(temp);
            temp.clear();
        }
        return v;
    }
};
